{"ast":null,"code":"var _jsxFileName = \"/Users/JaehyuckChoi/Documents/project/real-time-chat/real-time-chat-backend/real-time-chat-frontend/src/Chat.js\";\nimport React from 'react';\nimport './Chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CradGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmoticonsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport axios from './axios';\nimport Pusher from 'pusher-js';\nconst pusher = new Pusher('d2a9315a17a092f816e8', {\n  cluster: 'ap4'\n});\n\nconst Chat = () => {\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const getConversation = channelId => {\n    if (channelId) {\n      axios.get(`/get/conversation?id=${channelId}`).then(res => {\n        setMessages(res.data[0].conversation);\n      });\n    }\n  };\n\n  useEffect(() => {\n    /*if (channelId) {\n        db.collection('channels').doc(channelId).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n            setMessages(snapshot.docs.map(doc => doc.data()))\n        })\n    }*/\n    getConversation(channelId);\n    const channel = pusher.subscribe('conversation');\n    channel.bind('newMessage', function (data) {\n      getConversation(channelId);\n    });\n  }, [channelId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    /*db.collection('channels').doc(channelId).collection('messages').add({\n        message: input,\n        user: user,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })*/\n\n    axios.post(`/new/message?id=${channelId}`, {\n      message: input,\n      timestamp: Date.now(),\n      user: user\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatHeader, {\n    channelName: channelName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, messages.map(message => {\n    console.log(message);\n  }), messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    message: message.message,\n    timestamp: message.timestamp,\n    user: message.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    disabled: !channelId,\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: `Message #${channelName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chat__inputButton\",\n    onClick: sendMessage,\n    disabled: !channelId,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__inputIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CradGiftcardIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(GifIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(EmojiEmoticonsIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/JaehyuckChoi/Documents/project/real-time-chat/real-time-chat-backend/real-time-chat-frontend/src/Chat.js"],"names":["React","ChatHeader","AddCircleIcon","CradGiftcardIcon","GifIcon","EmojiEmoticonsIcon","Message","useSelector","selectUser","selectChannelId","selectChannelName","useState","useEffect","db","firebase","axios","Pusher","pusher","cluster","Chat","user","channelId","channelName","input","setInput","messages","setMessages","getConversation","get","then","res","data","conversation","channel","subscribe","bind","sendMessage","e","preventDefault","post","message","timestamp","Date","now","map","console","log","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Chat.css'\nimport ChatHeader from './ChatHeader'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport CradGiftcardIcon from '@material-ui/icons/CardGiftcard'\nimport GifIcon from '@material-ui/icons/Gif'\nimport EmojiEmoticonsIcon from '@material-ui/icons/EmojiEmotions'\nimport Message from './Message'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\nimport { selectChannelId, selectChannelName } from './features/appSlice'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport db from './firebase'\nimport firebase from 'firebase'\nimport axios from './axios'\nimport Pusher from 'pusher-js'\n\nconst pusher = new Pusher('d2a9315a17a092f816e8', {\n    cluster: 'ap4'\n});\n\nconst Chat = () => {\n    const user = useSelector(selectUser)\n    const channelId = useSelector(selectChannelId)\n    const channelName = useSelector(selectChannelName)\n    const [input, setInput] = useState('')\n    const [messages, setMessages] = useState([])\n\n    const getConversation = (channelId) => {\n        if (channelId) {\n            axios.get(`/get/conversation?id=${channelId}`).then((res) => {\n                setMessages(res.data[0].conversation)\n            })\n        }\n    }\n\n    useEffect(() => {\n        /*if (channelId) {\n            db.collection('channels').doc(channelId).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n                setMessages(snapshot.docs.map(doc => doc.data()))\n            })\n        }*/\n        getConversation(channelId)\n\n        const channel = pusher.subscribe('conversation');\n        channel.bind('newMessage', function(data) {\n            getConversation(channelId)\n        });\n\n    }, [channelId])\n\n    const sendMessage = (e) => {\n        e.preventDefault()\n        /*db.collection('channels').doc(channelId).collection('messages').add({\n            message: input,\n            user: user,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })*/\n        axios.post(`/new/message?id=${channelId}`, {\n            message: input,\n            timestamp: Date.now(),\n            user: user\n        })\n\n        setInput('')\n    }\n\n    return (\n        <div className='chat' >\n            <ChatHeader channelName={channelName} />\n\n            <div className=\"chat__messages\">\n                {messages.map((message) => {\n                    console.log(message)\n                })}\n                {messages.map(message => (\n                    <Message message={message.message} timestamp={message.timestamp} user={message.user} />\n                ))}\n            </div>\n\n            <div className=\"chat__input\">\n                <AddCircleIcon fontSize='large' />\n                <form>\n                    <input type=\"text\" disabled={!channelId} value={input} onChange={(e) => setInput(e.target.value)} placeholder={`Message #${channelName}`} />\n                    <button className='chat__inputButton' onClick={sendMessage} disabled={!channelId} type='submit'>Send Message</button>\n                </form>\n\n                <div className=\"chat__inputIcon\">\n                    <CradGiftcardIcon fontSize='large' />\n                    <GifIcon fontSize='large' />\n                    <EmojiEmoticonsIcon fontSize='large' />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}